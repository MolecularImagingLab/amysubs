#!/usr/bin/env python
"""This script generates a cleaned .txt file that may be used in statistical analysis. This text file includes amygdala subnuclei volumes, group (condition), age, sex, race, scanning site, and estimated intracranial volume."""
def main():
	# Import libraries
	import numpy as np
	import pandas as pd
	import matplotlib.pyplot as plt
	import seaborn as sns
	# Import summary stats files generated by summarystats.sh
	summ_stats = {'left':'/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/reports/lh.amygdalar-nuclei._allsubjects.txt',
		     'right':'/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/reports/rh.amygdalar-nuclei._allsubjects.txt',
		      'whole':'/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/reports/all.regions_allsubjects.txt',
		     'outliers':'/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/reports/outliers_master.csv',
		     'subinfo':'/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/measures/ndar_subject01.txt'}
	left = pd.read_csv(summ_stats['left'], header=0, sep='\t')
	right = pd.read_csv(summ_stats['right'], header=0, sep='\t')
	left.rename(columns={'Measure:volume':'Subject'}, inplace = True)
	right.rename(columns={'Measure:volume':'Subject'}, inplace = True)
	# Recode to include handedness
	left.sort_values('Subject', inplace=True)
	lh_whole = left[['Subject','Whole_amygdala']]
	left.drop(columns=['Whole_amygdala'], inplace=True)
	left['Hemisphere'] = "L"
	right.sort_values('Subject', inplace=True)
	rh_whole = right[['Subject','Whole_amygdala']]
	right.drop(columns=['Whole_amygdala'], inplace=True)
	right['Hemisphere'] = "R"
	# Average both hemispheres
	avg = pd.concat([left,right])
	avg = avg.groupby('Subject').mean()
	avg = avg.reset_index()
	# Import demographic data 
	subinfo = pd.read_csv(summ_stats['subinfo'], delimiter='\t', header=1, na_values='nan', keep_default_na=False)
	# Recode important column names
	subinfo.rename(columns={'Description of the phenotype for the subject':'Condition',
		               'Age in months at the time of the interview/test/sampling/imaging.':'Age',
		               'Sex of the subject':'Sex',
		               'Race of study subject':'Race'}, inplace=True)
	# Recode all psychoses as psychosis
	subinfo.loc[subinfo['Condition'] == 'In good health', 'Condition'] = "Healthy"
	subinfo.loc[subinfo['Condition'] == 'Non-affective psychosis', 'Condition'] = "Psychosis"
	subinfo.loc[subinfo['Condition'] == 'Affective psychosis', 'Condition'] = "Psychosis"
	# Sort by subject ID
	subinfo.sort_values("Subject ID how it's defined in lab/project", inplace=True)
	# Import ICV values
	icv = pd.read_csv(summ_stats['whole'], header=0, sep='\t')
	# Recode important column names
	icv.rename(columns={'EstimatedTotalIntraCranialVol':'ICV'}, inplace=True)
	# Sort by subject ID
	icv.sort_values("Measure:volume", inplace=True)
	# Join relevant information
	allinfo_avg = pd.concat([subinfo['Sex'], (subinfo['Age']/12), subinfo['Race'], 
		             subinfo['Condition'], subinfo['Site'], icv['ICV'],avg], axis=1)
	# Exclude outliers (optional) 
	# outliers = pd.read_csv(summ_stats['outliers'], header=0, index_col=0)
	# for outlier in outliers.loc[ outliers['Region'] == 'Lateral-nucleus', 'Subject']: # For specific regions
	# for outlier in [specify subject IDS here]: # For specific subjects
	#     indexName = allinfo_left[ allinfo_left['Subject'] == outlier ].index
	#     left.drop(index=indexName, inplace=True)
	#     right.drop(index=indexName, inplace=True)
	#     allinfo_avg.drop(index=indexName, inplace=True)
	#     allinfo_left.drop(index=indexName, inplace=True)
	#     allinfo_right.drop(index=indexName, inplace=True)
	# Melt dataframe for use in statistical analysis
	melted = pd.melt(allinfo_avg, id_vars=['Subject','Condition', 'Sex','Age','Race', 'Site', 'ICV'], var_name='Region', value_name='Volume')
	melted.to_csv('/media/lauri/heinrich/My_Computer/Documents/sync_me/AMY-HCP/reports/melted.csv')
if __name__ == "__main__":
    # execute only if run as a script
    main()
